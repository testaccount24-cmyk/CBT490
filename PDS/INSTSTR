         MACRO
.**********************************************************************
.*
.*  26/12/00  1.1    WRITTEN                                     AWR *
.*
.**********************************************************************
&NAME    INSTSTR &RES=,&BAL=
         GBLA  &INSTSTRN
         LCLA  &OPNO,&CT1,&CT2,&DR15,&FLDLEN
         LCLC  &C,&T,&P,&ASTYP,&INTYP,&EDTYP,&FLD,&EDLEN,&EDLENT
         LCLC  &WK1
         GBLB  &INSTSWK,&INSTSPG
         LCLB  &INSTSPL

&INSTSTRN  SETA  &INSTSTRN+1

.******                                     *******
.*
.*    WILL CONCATENATE ANY NO OF OPERANDS INTO A FIELD SPECIFIED BY
.*    RES=
.*
.*    EACH OPERAND SPECIFIED MAY BE:
.*
.*              1) ABSEXP|RX   ->THAT NO SPACES GENERATED
.*
.*              2) *+ABSEXP    ->SKIP ABSEXP COLS FROM START
.*
.*              3) 'STRING'    ->PUT THAT STRING INTO LINE
.*
.*              4) (NAME,EDITTYPE,EDITLEN) OR (NAME,EDITTYPE) OR NAME
.*
.*                 WHERE NAME IS CLASSIFIED AS:
.*              ASSEMBLER FIELD TYPE             TREATED INTERNALLY AS
.*                 (REG) ---------------------------INTYP R
.*                 ABSEXP(REG) OR UNDEFINED --------INTYP LA
.*                 FIELD TYPE  X,B,R,Q,V,S,C,G,D,E
.*                             W--------------------INTYP C
.*                 FIELD TYPE  P -------------------INTYP P
.*                 FIELD TYPE  Z -------------------INTYP Z
.*                 FIELD TYPE  F,A,Y,H--------------INTYP F
.*
.*                 TYPE G IS FIXED POINT EXPLICIT LENGTH
.*                 TYPE R IS ADDRESS CON EXPLICIT LENGTH
.*
.*
.*                 EDITLEN IS THE LEN. OF THE FIELD TO BE PUT ON THE
.*                 LINE (FOR INTYPE X THE EDITLEN IS ROUNDED DOWN AND
.*                 HALVED,AND THEN TWICE THAT LENGTH IS PUT ON
.*                 THE LINE)
.*
.*                 IT MAY BE:
.*                 (R2-R12):
.*                 ANYTHING VALID RX INSTRUCTION:
.*
.*                 EDITTYPE IS
.*
.*                 X  ---- CONVHEX TO LINE
.*                 C  ---- MOVE TO LINE
.*                 N  ---- PUT ON LINE AS A NO. WITH 0 SUPRESSION
.*                         AND LEADING -IF NEGATIVE.
.*
.*                 FOR NUMERIC EDITING THE DEFAULT EDIT LENGTH IS THAT
.*                 NEEDED TO JUST HOLD THE NUMBER
.*                 FOR CHAR. EDITING THE DEFAULT EDITLEN IS THE FIELD
.*                 LENGTH,OR 4 FOR INTYPE R|LA
.*                 FOR HEX EDITING IT IS TWICE THAT
.*
.*
.* EXAMPLE
.*
.*
.*
.*                  *  P =  " R1=XXXXXXXX "
.*
.*                      INSTSTR  ' R1=',((R1),X),RES=P
.*
.*
.*                  *  P =  " COUNT=44"
.*
.*                      ZAP  Q,=P'44'
.*                      INSTSTR  ' COUNT=',Q,RES=P
.*
.*
.*                  P   DS   CL80
.*                  Q   DS   PL3
.*                  A   DS   PL3
.*
.*
&NAME    DS    0H
         AIF   ('&RES' NE '').RESOK
         MNOTE 9,'NO RESULT FIELD SPECIFIED'
         MEXIT


.RESOK   MVI   &RES,C' '
         MVC   &RES+1(L'&RES-1),&RES     CLEAR RESULT
.*
.* IN THE CASE OF ONE LITERAL PARAMETER ONLY
.*
         AIF   (N'&SYSLIST NE 1).NOTQUIC
&OPNO    SETA      1
&C       SETC  '&SYSLIST(&OPNO)'
&T       SETC  T'&SYSLIST(&OPNO)
         AIF   (K'&C EQ 0).NOTQUIC      NULL OPERAND
         AIF   ('&C'(1,1) NE '''').NOTQUIC    STRING IN QUOTES

.QSTRING  AIF   ('&C'(1,1) NE '''').QSTRINGZ    STRING IN QUOTES
&CT1     SETA  2
&CT2     SETA  0
.QCTLOOP  ANOP

         AIF   (&CT1 EQ K'&C).QCTZ
         AIF   ('&C'(&CT1,1) NE '''').QSQE
&CT1     SETA  &CT1+1

.QSQE     ANOP
&CT1     SETA  &CT1+1
&CT2     SETA  &CT2+1
         AGO   .QCTLOOP
.QCTZ     ANOP

         AIF   (&CT2 EQ 0).QSTRINGZ
         AIF   (&CT2 GT 1).QMVC
         MVI &RES,C&C
         AGO   .QMZ
.QMVC     MVC &RES.(&CT2),=C&C
.QMZ      ANOP
.QSTRINGZ ANOP
         AGO   .QOPLOOPZ






.NOTQUIC ANOP

         STM   R14,R1,INSTSTR_SRSV       SAVE RR 1-14
         LA    R15,&RES                  R15->FIRST COL
&OPNO    SETA  0


.OPLOOP  ANOP                            LOOP FOR 1 OPERAND

&OPNO    SETA      &OPNO+1
         AIF   (N'&SYSLIST LT &OPNO).OPLOOPZ
&C       SETC  '&SYSLIST(&OPNO)'
&T       SETC  T'&SYSLIST(&OPNO)
.NUL     AIF   (K'&C NE 0).NULZ         NULL OPERAND
         AGO   .OPLOOPE
.NULZ    ANOP

.STRING  AIF   ('&C'(1,1) NE '''').STRINGZ    STRING IN QUOTES
&CT1     SETA  2
&CT2     SETA  0
.CTLOOP  ANOP

         AIF   (&CT1 EQ K'&C).CTZ
         AIF   ('&C'(&CT1,1) NE '''').SQE
&CT1     SETA  &CT1+1

.SQE     ANOP
&CT1     SETA  &CT1+1
&CT2     SETA  &CT2+1
         AGO   .CTLOOP
.CTZ     ANOP

         AIF   (&CT2 EQ 0).OPLOOPE
         AIF   (&CT2 GT 1).MVC
         MVI &DR15.(R15),C&C
         AGO   .MZ
.MVC     MVC &DR15.(&CT2,R15),=C&C
.MZ      ANOP

&DR15    SETA  &DR15+&CT2
         AGO   .OPLOOPE
.STRINGZ ANOP

.COL     AIF   (K'&C LE 2).COLZ         *+ABSEXP ->COL ABSEXP
         AIF   ('&C'(1,2) NE '*+').COLZ
         LA    R15,&RES-*+&C
&DR15    SETA  0
         AGO   .OPLOOPE
.COLZ    ANOP

.SPO     AIF   (('&T' NE 'O') OR ('&C'(1,1) EQ '(')).SPOZ  SPACES
         LA    R15,&DR15+&C.(R15)
&DR15    SETA  0
         AGO   .OPLOOPE
.SPOZ    ANOP

.SPU     AIF   (('&T' NE 'U') OR ('&C'(1,1) EQ '(')).SPUZ  SPACES
         LA    R15,&DR15+&C.(R15)
&DR15    SETA  0
         AGO   .OPLOOPE
.SPUZ    ANOP

.SPN     AIF   (('&T' NE 'N') OR ('&C'(1,1) EQ '(')).SPNZ  SPACES
&DR15    SETA  &DR15+&SYSLIST(&OPNO)
         AGO   .OPLOOPE
.SPNZ    ANOP

.*
.*
.*
.*
&EDTYP   SETC  'C'
&EDLEN   SETC  ''
&EDLENT  SETC  ''
&CT1     SETA  N'&SYSLIST(&OPNO)
         AIF   (&CT1 GT 1).NO1Z
&FLD     SETC  '&SYSLIST(&OPNO)'
&ASTYP   SETC  T'&SYSLIST(&OPNO)
         AIF   ('&SYSLIST(&OPNO,1)' EQ '').NO11Z
    AIF   ('&SYSLIST(&OPNO,1)'(K'&SYSLIST(&OPNO,1),1) NE ')').NO11Z
&FLD     SETC  '&SYSLIST(&OPNO,1)'
&ASTYP   SETC  T'&SYSLIST(&OPNO,1)
.NO11Z   ANOP

         AGO   .NOZ
.NO1Z    ANOP

&FLD     SETC  '&SYSLIST(&OPNO,1)'
&ASTYP   SETC  T'&SYSLIST(&OPNO,1)
         AIF   (('FLD' NE '') AND (N'&SYSLIST(&OPNO) LE 3)).FLDOK1
         MNOTE 9.'INVALID OPERAND &C'
         MEXIT

.FLDOK1  ANOP
&EDTYP   SETC  '&SYSLIST(&OPNO,2)'
         AIF   (N'&SYSLIST(&OPNO) LE 2).NO3Z
&EDLEN   SETC  '&SYSLIST(&OPNO,3)'
         AIF   ('&EDLEN' EQ '').NO3Z
         AIF   ('&EDLEN'(1,1) NE '(').EDLRZ
&EDLENT  SETC  'LR'
         AGO   .EDLENTZ
.EDLRZ   ANOP

         AIF   (T'&SYSLIST(&OPNO,3) NE 'N').EDLNZ
&EDLENT  SETC  'N'
         AGO   .EDLENTZ
.EDLNZ   ANOP

         AIF   (T'&SYSLIST(&OPNO,3) NE 'U').EDLUZ
        AIF ('&SYSLIST(&OPNO,3)'(K'&SYSLIST(&OPNO,3),1) EQ ')').EDLUZ
&EDLENT  SETC  'U'
         AGO   .EDLENTZ
.EDLUZ   ANOP

&EDLENT  SETC  'LA'
.EDLENTZ ANOP

.NO3Z    ANOP
.NOZ     ANOP
.*
.*
.*
.*
.*
         AIF   ('&EDTYP' NE '').EDTCZ
&EDTYP   SETC  'C'
.EDTCZ   ANOP

         AIF   ('&EDTYP' EQ 'C').EDTOK
         AIF   ('&EDTYP' EQ 'N').EDTOK
         AIF   ('&EDTYP' EQ 'X').EDTOK
         MNOTE 9,'INVALID EDIT TYPE &EDTYP'
         MEXIT
.EDTOK   ANOP
.*
.*
.*
.*
         AIF   ('&FLD'(1,1) NE '(').INTRZ
&INTYP   SETC  'R'
&FLDLEN  SETA  4
         AGO   .INTZ
.INTRZ   ANOP

         AIF   ('&FLD'(K'&FLD,1) NE ')').INTLAZ
&INTYP   SETC  'LA'
&FLDLEN  SETA  4
         AGO   .INTZ
.INTLAZ  ANOP

         AIF   ('&ASTYP' NE 'Z').INTZZ
&INTYP   SETC  'Z'
&FLDLEN  SETA  L'&SYSLIST(&OPNO,1)
         AGO   .INTZ
.INTZZ   ANOP

         AIF   ('&ASTYP' NE 'P').INTPZ
&INTYP   SETC  'P'
&FLDLEN  SETA  L'&SYSLIST(&OPNO,1)
         AGO   .INTZ
.INTPZ   ANOP

         AIF   ('&ASTYP' EQ 'F').INTF
         AIF   ('&ASTYP' EQ 'A').INTF
         AIF   ('&ASTYP' EQ 'H').INTF
         AIF   ('&ASTYP' EQ 'Y').INTF
         AGO   .INTFZ
.INTF    ANOP
&INTYP   SETC  'F'
&FLDLEN  SETA  L'&SYSLIST(&OPNO,1)
         AGO   .INTZ
.INTFZ   ANOP

         AIF   ('&ASTYP' EQ 'X').INTC
         AIF   ('&ASTYP' EQ 'B').INTC
         AIF   ('&ASTYP' EQ 'C').INTC
         AIF   ('&ASTYP' EQ 'D').INTC
         AIF   ('&ASTYP' EQ 'E').INTC
         AIF   ('&ASTYP' EQ 'G').INTC
         AIF   ('&ASTYP' EQ 'Q').INTC
         AIF   ('&ASTYP' EQ 'R').INTC
         AIF   ('&ASTYP' EQ 'S').INTC
         AIF   ('&ASTYP' EQ 'V').INTC
         AIF   ('&ASTYP' EQ 'W').INTC
         AGO   .INTCZ
.INTC    ANOP
&INTYP   SETC  'C'
&FLDLEN  SETA  L'&SYSLIST(&OPNO,1)
         AGO   .INTZ
.INTCZ   ANOP

         AIF   ('&ASTYP' EQ 'U').INTLA2
         AGO   .INTLA2Z
.INTLA2  ANOP
&INTYP   SETC  'LA'
&FLDLEN  SETA  4
         AGO   .INTZ
.INTLA2Z ANOP

         MNOTE 9,'&FLD HAS INVALID TYPE &ASTYP'
         MEXIT
.INTZ    ANOP
.*
.*
.*
.*
         AIF   ('&INTYP' NE 'R').RCHZ
&FLD     SETC  '&FLD'(2,K'&FLD-2)
         AIF   (('&FLD' NE '14') AND ('&FLD' NE 'R14')).R14CHZ
&FLD     SETC  'INSTSTR_SRSE'
         AGO   .RCHASEL
.R14CHZ  ANOP
         AIF   (('&FLD' NE '15') AND ('&FLD' NE 'R15')).R15CHZ
&FLD     SETC  'INSTSTR_SRSF'
         AGO   .RCHASEL
.R15CHZ  ANOP
         AIF   (('&FLD' NE '1') AND ('&FLD' NE 'R1')).R1CHZ
&FLD     SETC  'INSTSTR_SRS1'
         AGO   .RCHASEL
.R1CHZ   ANOP
         AIF   (('&FLD' NE '0') AND ('&FLD' NE 'R0')).R0CHZ
&FLD     SETC  'INSTSTR_SRS0'
         AGO   .RCHASEL
.R0CHZ   ANOP
         AIF   ('&EDTYP' EQ 'X').RCHMOD1
         AIF   ('&EDTYP' EQ 'N').RCHMODZ
         AIF   ('&EDLEN' EQ '').RCHMODZ
.RCHMOD1 ST    &FLD,INSTSTR_SRS#
&FLD     SETC  'INSTSTR_SRS#'
         AGO   .RCHASEL
.RCHMODZ ANOP
.RCHNSEL ANOP
         AGO   .RCHESEL
.RCHASEL ANOP
&INTYP  SETC  'F'
&FLDLEN SETA  4
.RCHESEL ANOP
.RCHZ    ANOP
.*
.*
.*
.*
         AIF   ('&EDTYP' NE 'C').ETCZ
         AIF   ('&INTYP' NE 'R').CRZ
         ST    &FLD,&DR15.(R15)
&DR15    SETA  &DR15+4
         AGO   .CZ
.CRZ     ANOP
         AIF   ('&EDLENT' NE '').CMVCZ
         MVC   &DR15.(&FLDLEN,R15),&FLD
&DR15    SETA  &DR15+&FLDLEN
         AGO   .CZ
.CMVCZ   ANOP
         AIF   ('&EDLENT' NE 'N').CMVCNZ
         MVC   &DR15.(&EDLEN,R15),&FLD
&DR15    SETA  &DR15+&SYSLIST(&OPNO,3)
         AGO   .CZ
.CMVCNZ  ANOP
         AIF   ('&EDLENT' NE 'U').CMVCUZ
         MVC   &DR15.(&EDLEN,R15),&FLD
         LA    R15,&DR15+&EDLEN.(R15)
&DR15    SETA  0
         AGO   .CZ
.CMVCUZ  ANOP
         AIF   (&DR15 EQ 0).CMVCX1
         LA    R15,&DR15.(R15)
&DR15    SETA  0
.CMVCX1  ANOP
         LA    R14,&FLD
         AIF   ('&EDLENT' NE 'LA').CMVCLAZ
         LA    R1,&EDLEN
         SH    R1,=Y(1)
         BNP   *+12
         EX    R1,INSTSTR_SXAA
         LA    R15,1(R1,R15)
         AGO   .CZ
.CMVCLAZ ANOP
         AIF   ('&EDLENT' NE 'LR').CMVCLRZ
         LR    R1,&EDLEN
         SH    R1,=Y(1)
         BNP   *+12
         EX    R1,INSTSTR_SXAA
         LA    R15,1(R1,R15)
         AGO   .CZ
.CMVCLRZ ANOP
.CZ      ANOP
         AGO   .ETZ
.ETCZ    ANOP
.*
.*
.*
&INSTSPL SETB  1                        TO GEN. GLOBAL CALL AREA
.*
.*
.*
.*
.*
         AIF   ('&EDTYP' NE 'X').ETXZ
         AIF   (&DR15 EQ 0).X1
         LA    R15,&DR15.(R15)
&DR15    SETA  0
.X1      ANOP
         LA    R14,&FLD
         AIF   ('&EDLENT' NE '').XLZ
         LA    R1,&FLDLEN*2
         AGO   .XZ
.XLZ     ANOP
         AIF   ('&EDLENT' NE 'LR').XLRZ
         LR    R1,&EDLEN
         AGO   .XZ
.XLRZ    ANOP
         LA    R1,&EDLEN
.XZ      ANOP
         BAL   R0,INSTSTR_SPX1
         AGO   .ETZ
.ETXZ    ANOP
         AIF   ('&EDTYP' NE 'N').ETNZ
         AIF   ('&INTYP' NE 'R').NRZ
         LR    R14,&FLD
         AGO   .NZ
.NRZ     ANOP
         AIF   ('&INTYP' NE 'F').NFZ
         AIF   (&FLDLEN EQ 2).NFH
         L     R14,&FLD
         AGO   .NFFZ
.NFH     LH    R14,&FLD
.NFFZ    ANOP
         AGO   .NZ
.NFZ     ANOP
         AIF   ('&INTYP' NE 'Z').NZZ
         PACK  INSTSTR_SPNP,&FLD
         AGO   .NZ
.NZZ     ANOP
         AIF   ('&INTYP' NE 'P').NPZ
         ZAP   INSTSTR_SPNP,&FLD
         AGO   .NZ
.NPZ     ANOP
         AIF   (&FLDLEN LE 4).NC4
         MNOTE 9,'&FLD > 4 BYTES LONG'
         MEXIT
.NC4     AIF   (&FLDLEN LT 4).NC4Z
         ICM   R14,15,&FLD
         AGO   .NZ
.NC4Z    ANOP
         SLR   R14,R14
         AIF   (&FLDLEN LT 3).NC3Z
         ICM   R14,7,&FLD
         AGO   .NZ
.NC3Z    ANOP
         AIF   (&FLDLEN LT 2).NC2Z
         ICM   R14,3,&FLD
         AGO   .NZ
.NC2Z    ANOP
         IC    R14,&FLD
         AGO   .NZ
.NZ      ANOP
         AIF   ('&EDLENT' EQ '').N22
&P       SETC  'INSTSTR_SPN2'
         AIF   (('&INTYP' EQ 'Z') OR ('&INTYP' EQ 'P')).N21
&P       SETC  'INSTSTR_SPN1'
.N21     ANOP
         AGO   .N24
.N22     ANOP
&P       SETC  'INSTSTR_SPN4'
         AIF   (('&INTYP' EQ 'Z') OR ('&INTYP' EQ 'P')).N23
&P       SETC  'INSTSTR_SPN3'
.N23     ANOP
.N24     ANOP
.*
.*
.*
.*
         AIF   ('&EDLENT' NE '').NL0Z
         AGO   .NLZ
.NL0Z    ANOP
         AIF   ('&EDLENT' NE 'LR').NLLRZ
         LR    R1,&EDLEN
         AGO   .NLZ
.NLLRZ   ANOP
         LA    R1,&EDLEN
.NLZ     ANOP
.*
.*
.*
.*
         AIF   (&DR15 EQ 0).N44
         LA    R15,&DR15.(R15)
&DR15    SETA  0
.N44     ANOP
         BAL   R0,&P
.*
.*
         AGO   .ETZ
.ETNZ    ANOP
         MNOTE 9,'MACRO ERROR ETNZ'
         MEXIT
.ETZ     ANOP
.*
.OPLOOPE ANOP
         AGO   .OPLOOP
.OPLOOPZ ANOP

         LM    R14,R1,INSTSTR_SRSV
.QOPLOOPZ ANOP


         AIF   ('&BAL' EQ '').BALZ
         BAL   R1,&BAL
.BALZ    ANOP

         AIF   (NOT &INSTSWK).GEN
         AIF   ((NOT &INSTSPG) AND (&INSTSPL)).GEN
         AGO   .GENZ
.GEN     B     INST_A&SYSNDX
         AIF   (&INSTSWK).GEN1Z
&INSTSWK SETB 1
INSTSTR_SXAA MVC 0(0,R15),0(R14)
.GEN1Z   ANOP
         AIF   ((&INSTSPG) OR (NOT &INSTSPL)).GEN2Z
&INSTSPG SETB 1
INSTSTR_SPX1 DS 0H
         MVI   INSTSTR_SFLG,INSTSTR_SCVX
         B     INSTSTR_SCAL
INSTSTR_SPN1 DS 0H
         CVD   R14,INSTSTR_SDWD
         ZAP   INSTSTR_SPNP,INSTSTR_SDWD
INSTSTR_SPN2 DS 0H
         MVI   INSTSTR_SFLG,INSTSTR_SED1
         B     INSTSTR_SCAL
INSTSTR_SPN3 DS 0H
         CVD   R14,INSTSTR_SDWD
         ZAP   INSTSTR_SPNP,INSTSTR_SDWD
INSTSTR_SPN4 DS 0H
         MVI   INSTSTR_SFLG,INSTSTR_SED2
INSTSTR_SCAL EQU *
         STM   R14,R1,INSTSTR_SLST
         CALL  INSTSTRC,(INSTSTR_SDSC),VL,MF=(E,INSTSTR_CALL)
         L     R15,INSTSTR_SFPT
         L     R14,INSTSTR_SRTA
         BR    R14
.GEN2Z   ANOP
INST_A&SYSNDX DS   0H
.GENZ    ANOP
         MEND
