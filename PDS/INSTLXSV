//TSO0572 JOB (T951V88),AWR,MSGCLASS=T,CLASS=A,NOTIFY=TSO057
/*JOBPARM ROOM=VVVV
//  INCLUDE MEMBER=SYSLEV
//*
//*
//*    DONE  OS/390 2.10 01/2001
//*
//*
//*
//*    THIS JOB INSTALL THE PANEL EXIT INSTLXSV WHICH IS
//*    USED TO GET THE SYSTEM VARIABLES IN ISPF PANELS
//*
//*
//*
//ASM    EXEC PGM=ASMA90,PARM=(OBJ,NODECK,RENT)
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.&SYSLEV..SHASSRC,DISP=SHR
//         DD  DSN=SYS1.&SYSLEV..AMODGEN,DISP=SHR
//         DD  DSN=SFT.INSTASM.ASM,DISP=SHR
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(9999,(600,100))
//SYSUT2   DD  DSN=&&SYSUT2,UNIT=VIO,SPACE=(1700,(300,50))
//SYSUT3   DD  DSN=&&SYSUT3,UNIT=VIO,SPACE=(1700,(300,50))
//SYSPRINT DD  SYSOUT=*,DCB=BLKSIZE=1089
//SYSPUNCH DD  SYSOUT=B
//SYSLIN   DD  DSN=&&OBJSET,UNIT=SYSSQ,SPACE=(80,(200,50)),
//             DISP=(MOD,PASS)
***********************************************************************
*                                                                     *
*   INSTLXSV IS A PANEL EXIT                                          *
*                                                                     *
*   INSTLXSV IS USED TO GET A MVS SYSTEM VARIABLE AND PASS IT TO ISPF *
*                                                                     *
*                                                                     *
*   TO GET SYSTEM VARIABLE "FRED" IT MUST BE CALLED THUS              *
*   IN THE )PROC  )INIT OR )REINIT PORTION OF THE PANEL               *
*                                                                     *
*                                                                     *
*  &FRED = AAAAAAAA   /* MUST BE LONG ENOUGH TO HOLD SUBSTITUTED VALUE
*  PANEXIT((FRED),LOAD,INSTLXSV)                                      *
*                                                                     *
*                                                                     *
*   INPUT PARAMETERS                                                  *
*                                                                     *
*                1)   FULLWORD OF EXIT DATA                           *
*                2)   CALLING PANEL NAME                              *
*                3)   1 BYTE PANEL SECTION  I/R/P                     *
*                4)   CL8(ERROR MSG ID)                               *
*                5)   FULLWORD NUMBER OF VARIABLES MUST BE 1          *
*                6)   ARRAY OF VARIABLE NAMES CL8 MUST BE ONE ONLY    *
*                7)   ARRAY OF FULLWORD VARIABLE LENGTHS MUST BE ONE  *
*                8)   VARIABLE VALUES PACKED IN A SINGLE BUFFER       *
*                                                                     *
*   THIS ROUTINE TAKES THE VARIABLE NAME AND PREFIXES AN &, AND THEN  *
*   CALLS THE SYSTEM ASASYMBM ROUTINE TO SUBSTITUTE IT.  IF THIS ENDS *
*   SUCCESSFULLY IT REPLACES THE VALUE IN THE BUFFER                  *
*                                                                     *
*   THE ROUTINE IS REENTRANT, 31/ANY AND LPA RESIDENT                 *
*                                                                     *
***********************************************************************
INSTLXSV INSTSS

         LR    R6,R1       SAVE R1
         L     R1,16(R6)   CHECK NO OF VARIABLES
         L     R1,0(R1)
         C     R1,=A(1)
         BNE   FAIL
         L     R1,20(R6)   GET NAME OF VARIABLE
         MVC   PATTERN_VN,0(R1) MOVE IN TO PATTERN PREFIXED BY &
         MVI   PATTERN_AMP,C'&&'
*
*        CALL ASASYMBU TO DO SUBSTITUTION
*
*        SET UP CONTROL BLOCK
*
         XC    SYMBP(SYMBP_LEN),SYMBP   INITIALIZE TO ZERO
         LA    R1,PATTERN               ADDRESS OF PATTERN
         ST    R1,SYMBPPATTERN@         SAVE IN SYMBP AREA
         LA    R1,L'PATTERN             LENGTH OF PATTERN
         ST    R1,SYMBPPATTERNLENGTH    SAVE IN SYMBP AREA
         LA    R1,TARGET                ADDRESS OF TARGET
         ST    R1,SYMBPTARGET@          SAVE IN SYMBP AREA
         MVC   TARGETLENGTH,=A(L'TARGET)  SET LENGTH OF TARGET
         LA    R1,TARGETLENGTH          ADDRESS OF TARGET LENGTH
         ST    R1,SYMBPTARGETLENGTH@    SAVE IN SYMBP AREA
         LA    R1,RETURNCODE            ADDRESS OF RETURN CODE
         ST    R1,SYMBPRETURNCODE@      SAVE IN SYMBP AREA
  LINK   EP=ASASYMBM,MF=(E,MYSYMBP),SF=(E,LINKL),DCB=0
         CLC   =A(0),RETURNCODE
         BNE    FAIL
         L     R2,28(R6)        R2 -> VARIABLE VALUE
         L     R3,24(R6)
         L     R3,0(R3)         R3 = VARIABLE LENGTH ON INPUT
         LA    R4,TARGET
         L     R5,TARGETLENGTH
         O     R5,=A(X'40000000')   BLANK PAD/TRUNCATE
         MVCL  R2,R4
         B     OK


OK       EQU   *
         INSTRS


FAIL     EQU   *
         INSTRS  RC=8



         INSTWORK START

LINKL        LINK SF=L
PL           CALL MF=L

PATTERN      DC    CL9' '
             ORG   PATTERN
PATTERN_AMP  DS    C
PATTERN_VN   DS    CL8
             ORG   PATTERN+L'PATTERN

             DS    0F
RETURNCODE   DS    F                   RETURN CODE
TARGETLENGTH DS    F                   LENGTH OF TARGET
TARGET       DS    CL80
MYSYMBP      DS    CL(SYMBP_LEN)       SYMBP AREA
             ORG   MYSYMBP
             ASASYMBP  DSECT=NO        MAPPING OF SYMBP AREA

        INSTWORK END

        END
//LKED    EXEC PGM=IEWL,PARM=(XREF,LIST,RENT,AMODE(31),RMODE(ANY)),
//             COND=(0,LT,ASM)  **NB RENT CHECK
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=121,BLKSIZE=1210)
//SYSLMOD  DD  DSN=YOUR.LINK.OR.LPA.LIB,DISP=SHR
   NAME  INSTLXSV(R)
