***********************************************************************
*                                                                     *
*  12/12/00  1.0    WRITTEN                                     AWR   *
*  28/12/00  1.1    INSTSTR STUFF ADDED                         AWR   *
*                                                                     *
***********************************************************************

***********************************************************************
*                                                                     *
*        THIS PROGRAM GETS THE DATE, CONVERTS IT TO DISPLAY HEX BY    *
*        CALLING INSTCVTX, CHANGES IT TO DAYS BY CALLING              *
*        INSTDTID, CALCULATES WHAT DAY OF THE WEEK IT IS BY DIVIDING  *
*        BY 7, FORMATS A SUITABLE MESSAGE USING INSTSTR, AND THEN     *
*        ISSUES A WTO BY CALLING INSWTOR                              *
*                                                                     *
*        AFTER THIS,   A NUMBER OF DEMONSTRATIONS OF INSTSTR ARE      *
*        GIVEN AND THE RESULTS DISPLAYED                              *
*                                                                     *
*                                                                     *
*        THE CALLED PROGRAMS ARE HERE COPIED INLINE.  THIS IS THE     *
*        RECOMMENDED WAY OF USING THEM, BUT YOU MAY IF                *
*        YOU WISH COMPILE THEM TO OBJECT CODE AND LINK THEM IN        *
*                                                                     *
*        ASSEMBLE THIS USING JOB INSTIVP1                             *
*                                                                     *
***********************************************************************


INSTIVP  INSTSS

         TIME  DEC,STOREADDR,LINKAGE=SYSTEM,DATETYPE=YYYYMMDD
         BAL   R1,FORMAT_AND_DISPLAY_TIME

*        SOME DEMOS OF INSTSTR

*        HEX FORMATTING, AND STRINGING IN AN UNFORMATTED CHAR FIELD

         INSTSTR  ' F1=',(F1,X),ACHARFIELD,RES=MESSAGE
         BAL  R1,WTO

*        NUMERIC FORMATTING

         INSTSTR  ' F2=',(F2,N),RES=MESSAGE
         BAL  R1,WTO

*        DISPLAY OF A REGISTER - HEX AND NUM.  ALSO SHOWING
*        HOW TO INSERT SPACES

         LA   R1,999

         INSTSTR  ' R1=',((R1),N),3,((R1),X),RES=MESSAGE
         BAL  R1,WTO

*        HOW TO SPECIFY LENGTH OF FORMATTED FIELDS.  ALSO ABSOLUTE
*        POSITIONING BY *+NN


         INSTSTR  *+0,' F1=',(F1,N,4),*+10,'F2=',(F2,N,4),RES=MESSAGE
         BAL  R1,WTO


*        SOME DEMOS OF INSTPRS


*        PARSE A ASSEMBLER-STYLE COMMAND INTO NAME,COMMAND,OPERANDS


         INSTPRS  FIELD,RES=(NAME,COMMAND,OPERANDS),DLM=' '
         MVC  MESSAGE,NAME
         BAL  R1,WTO

         MVC  MESSAGE,COMMAND
         BAL  R1,WTO

         MVC  MESSAGE,OPERANDS
         BAL  R1,WTO

*        PARSE OPERANDS INTO OP1,OP2,OP3


         INSTPRS OPERANDS,RES=(OP1,OP2,OP3),DLM=','
         MVC  MESSAGE,OP1
         BAL  R1,WTO

         MVC  MESSAGE,OP2
         BAL  R1,WTO

         MVC  MESSAGE,OP3
         BAL  R1,WTO


*        USE INSTNUM TO GET THE NUMEIC VALUE OF OP2
*

         INSTNUM      OP2
 INSTSTR  ' INSTNUM OP2  R1=',((R1),N),' R15=',((R15),N),RES=MESSAGE
         BAL  R1,WTO

*        USE INSTNUM TO TRY IT FOR OP1 - ERROR
*

         INSTNUM      OP1
 INSTSTR  ' INSTNUM OP1  R1=',((R1),N),' R15=',((R15),N),RES=MESSAGE
         BAL  R1,WTO





*        PARSE OPERANDS FOR A LENGTH SPECIFIED IN A REGISTER
*        BY THIS MEANS ONLY PART OF A FIELD CAN BE USED AS SOURCE


         LA   R3,6
         INSTPRS OPERANDS,RES=(OP1,OP2,OP3),DLM=',',LEN=(R3)


         MVC  MESSAGE,OP1
         BAL  R1,WTO

         MVC  MESSAGE,OP2
         BAL  R1,WTO

         MVC  MESSAGE,OP3
         BAL  R1,WTO


         INSTRS  RC=0


FIELD   DC   CL100'NAME   COMMAND  OP1,999,XXX'


ACHARFIELD DC C' <=== LOOKY HERE!'
F1  DC   PL3'44'
F2  DC   F'-5'



FORMAT_AND_DISPLAY_TIME INSTBALI

***********************************************************************
*                                                                     *
*        THIS IS A "PERFORMED" PROCESS                                *
*                                                                     *
*        IT IN TURN "PERFORMS" SEVERAL SUB-PROCESSES.  GENERALLY      *
*        THIS WOULD BE AN UNNECESSARY FUSS, BUT IT IS SHOWN HERE TO   *
*        DEMONSTRATE NESTED "PERFORMS".                               *
*                                                                     *
***********************************************************************

         BAL  R1,CONV_HEX
         BAL  R1,COMPUTE_DAY
         BAL  R1,FORMAT_MESSAGE
         BAL  R1,WTO


         INSTBALO



CONV_HEX INSTBALI
*
*        CONVERT THE FULLWORD IN YYYYMMDD TO 8 BYTES HEX
*
         CALL INSTCNVX,(YYYYMMDD,HEX,FROM_LEN),VL,MF=(E,CALL_L)
         LTR  R15,R15
         BNZ  CONV_HEX_ERR
         INSTBALO

CONV_HEX_ERR  EQU  *
         LR   R5,R15
         WTO  'INSTCNVX ERROR'
         LR   R15,R5
         INSTRS RC=(R15)



COMPUTE_DAY INSTBALI
*
*        GET DAY OF THE WEEK IN R7
*
         MVI  ISOSL1,C'-'
         MVI  ISOSL2,C'-'
         MVC  ISOYYYY,HEXYYYY
         MVC  ISOMM,HEXMM
         MVC  ISODD,HEXDD
         CALL INSTDTID,(=C'1',ISO,DAYS),VL,MF=(E,CALL_L)
         LTR  R15,R15
         BNZ  COMPUTE_DAY_ERR

*        DAYS IS NOW THE DAYS_SINCE_1_JAN_1_AD+1.   DIVIDE BY 7 AND
*        REMAINDER IS DAY OF WEEK, 0=SUN -> 6=SAT

         SLR  R0,R0
         L    R1,DAYS
         D    R0,=A(7)
         LR   R1,R0
         MH   R1,=Y(L'DAYTAB)
         LA   R7,DAYTAB(R1)

*        R7 -> THE DAY

         INSTBALO


COMPUTE_DAY_ERR  EQU  *
         LR   R5,R15
         WTO  'INSTDTID ERROR'
         LR   R15,R5
         INSTRS RC=(R15)


FORMAT_MESSAGE INSTBALI
         INSTSTR ' TODAY IS ',(0(R7),C,L'DAYTAB),                      X
               RES=MESSAGE
         INSTBALO


WTO      INSTBALI
         CALL  INSTWTOR,(MESSAGE,ROUTECDE),VL,MF=(E,CALL_L)
         INSTBALO



***********************************************************************
*                                                                     *
*        R/O STUFF HERE - CONSTANTS                                   *
*                                                                     *
***********************************************************************

DAYTAB    DC   CL10'SUNDAY'
          DC   CL10'MONDAY'
          DC   CL10'TUESDAY'
          DC   CL10'WEDNESDAY'
          DC   CL10'THURSDAY'
          DC   CL10'FRIDAY'
          DC   CL10'SATURDAY'

FROM_LEN  DC   A(L'YYYYMMDD)

ROUTECDE  DC   A(0)


          LTORG


***********************************************************************
*                                                                     *
*        R/W STUFF HERE, BETWEEN INSTWORK START AND INSTWORK END      *
*                                                                     *
***********************************************************************

          INSTWORK START

CALL_L    CALL  ,(,,,,),MF=L

STOREADDR DS 4F
          ORG STOREADDR
          DS  F
          DS  F
YYYYMMDD  DS  F
          ORG

DAYS      DS   F

ISO       DS   CL10
          ORG  ISO
ISOYYYY   DS   CL4
ISOSL1    DS   C
ISOMM     DS   CL2
ISOSL2    DS   C
ISODD     DS   CL2
          ORG

HEX       DS   CL8
          ORG  HEX
HEXYYYY   DS   CL4
HEXMM     DS   CL2
HEXDD     DS   CL2
          ORG

MESSAGE   DS  CL100
NAME      DS  CL100
COMMAND   DS  CL100
OPERANDS  DS  CL100
OP1       DS  CL100
OP2       DS  CL100
OP3       DS  CL100

          INSTWORK END



          END


***********************************************************************
*                                                                     *
*         COPY IN OTHER, CALLED, PROGRAMS HERE                        *
*                                                                     *
***********************************************************************


          COPY INSTDTID

          COPY INSTWTOR

          COPY INSTCNVX

***********************************************************************
*                                                                     *
*         INSTSTRC NEEDED BECAUSE INSTSTR IS USED                     *
*                                                                     *
***********************************************************************

          COPY INSTSTRC

***********************************************************************
*                                                                     *
*         INSTPRSE NEEDED BECAUSE INSTPRS IS USED                     *
*                                                                     *
***********************************************************************

          COPY INSTPRSE


          END
